project(':konan-core') {

    sourceSets {
        main {
            proto {
                srcDir 'src/main/protobuf'
            }
            resources {
                srcDir 'src/main/protobuf'
            }
        }
    }

    protobuf {
        generatedFilesBaseDir = 'generated'
        protoc {
            // The artifact spec for the Protobuf Compiler
            artifact = 'com.google.protobuf:protoc:3.0.0'
        }
        plugins {
            // Optional: an artifact spec for a protoc plugin, with "grpc" as
            // the identifier, which can be referred to in the "plugins"
            // container of the "generateProtoTasks" closure.
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0'
            }
        }
        generateProtoTasks {
            ofSourceSet('main')*.plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc {}
            }
        }
    }

    idea {
        module {
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc");
        }
    }

    dependencies {
//        compile('org.springframework.boot:spring-boot-starter:1.4.0.RELEASE') {
//            exclude group: 'commons-logging', module: 'commons-logging'
//        }
//        compile 'org.springframework.cloud:spring-cloud-context:1.1.1.RELEASE'
//        compile 'io.grpc:grpc-protobuf:1.0.0'
//        compile 'io.grpc:grpc-stub:1.0.0'
        // compile 'io.grpc:grpc-grpclb:1.0.0'
        compile 'io.grpc:grpc-all:1.0.1'
        compile 'io.grpc:grpc-grpclb:1.0.1'
        compile 'io.grpc:grpc-services:1.0.1'
        // compile 'com.google.api:gax:0.0.19'
        // compile 'com.fasterxml.jackson.core:jackson-databind:2.8.2'

        compileOnly 'org.projectlombok:lombok:1.16.10'
//        compile 'org.springframework.cloud:spring-cloud-commons:1.1.0.RELEASE'
//        compile 'org.springframework.cloud:spring-cloud-consul-discovery:1.1.0.RELEASE'
//        compile 'org.springframework.cloud:spring-cloud-consul-binder:1.1.0.RELEASE'
//        compile 'org.springframework.cloud:spring-cloud-consul-config:1.1.0.RELEASE'
//        compile 'com.ecwid.consul:consul-api:1.2.0'

        compile 'org.springframework.cloud:spring-cloud-starter-consul-all:1.1.0.RELEASE'
        //compile 'org.springframework.cloud:spring-cloud-starter-feign:1.2.0.RELEASE'

        //compile 'org.springframework.cloud:spring-cloud-config-server:1.2.0.RELEASE'

        //compile 'org.springframework.cloud:spring-cloud-netflix-core:1.2.0.RELEASE'
        //compile 'com.netflix.ribbon:ribbon:2.2.0'
        //compile 'com.netflix.ribbon:ribbon-core:2.2.0'
    }

}
